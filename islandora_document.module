<?php

/**
 * @file
 * Handles the creation/display of islandora:sp-document objects.
 */

/**
 * Implements hook_theme().
 */
function islandora_document_theme($existing, $type, $theme, $path) {
  return [
    'islandora_document' => [
      'file' => 'theme/theme.inc',
      'template' => 'islandora_document',
      'pattern' => 'islandora_document__',
      'variables' => ['islandora_object' => NULL],
    ],
  ];
}

/**
 * Implements hook_islandora_required_objects().
 */
function islandora_document_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_document');
  // Document Content Model.
  $document_content_model = $connection->repository->constructObject('islandora:sp_document');
  $document_content_model->owner = 'fedoraAdmin';
  $document_content_model->label = 'Islandora Document Content Model';
  $document_content_model->models = 'fedora-system:ContentModel-3.0';
  // DS-COMPOSITE-MODEL Datastream.
  $datastream = $document_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_document_ds_composite_model.xml", FALSE);
  $document_content_model->ingestDatastream($datastream);
  // ISLANDORA-CM Datastream.
  $datastream = $document_content_model->constructDatastream('ISLANDORACM', 'M');
  $datastream->label = 'Islandora content model information';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_document_content_model.xml", FALSE);
  $document_content_model->ingestDatastream($datastream);
  // Document Collection.
  $document_collection = $connection->repository->constructObject('islandora:sp_document_collection');
  $document_collection->owner = 'fedoraAdmin';
  $document_collection->label = 'Document Collection';
  $document_collection->models = 'islandora:collectionCModel';
  $document_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');
  // Collection Policy Datastream.
  $datastream = $document_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_document_collection_policy.xml", FALSE);
  $document_collection->ingestDatastream($datastream);
  // TN Datastream.
  $datastream = $document_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/folder.png", FALSE);
  $document_collection->ingestDatastream($datastream);
  return [
    'islandora_document' => [
      'title' => 'Islandora Document',
      'objects' => [
        $document_content_model,
        $document_collection,
      ],
    ],
  ];
}

/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_document_islandora_sp_document_islandora_view_object($object, $page_number, $page_size) {
  return [
    '#theme' => 'islandora_document',
    '#islandora_object' => $object,
  ];
}

/**
 * Implements hook_xml_form_builder_forms().
 */
function islandora_document_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_document');
  return [
    'Document MODS form' => [
      'form_file' => "$module_path/xml/islandora_document_form_mods.xml",
    ],
  ];
}

/**
 * Implements hook_xml_form_builder_form_associations().
 */
function islandora_document_xml_form_builder_form_associations() {
  return [
    'islandora_document_mods_form' => [
      'content_model' => 'islandora:sp_document',
      'form_name' => 'Document MODS form',
      'dsid' => 'MODS',
      'title_field' => ['titleInfo', 'title'],
      'transform' => 'mods_to_dc.xsl',
      'self_transform' => 'islandora_cleanup_mods_extended.xsl',
      'template' => FALSE,
    ],
  ];
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_document_islandora_sp_document_islandora_ingest_steps() {
  return [
    'islandora_document_file_upload' => [
      'weight' => 10,
      'type' => 'form',
      'form_class' => 'Drupal\islandora_document\Form\DocumentUpload',
    ],
  ];
}

/**
 * Implements hook_CMODEL_PID_islandora_derivative().
 */
function islandora_document_islandora_sp_document_islandora_derivative() {
  $derivatives = [];
  $derivatives[] = [
    'source_dsid' => 'OBJ',
    'destination_dsid' => 'PDF',
    'weight' => '0',
    'function' => [
      'islandora_document_add_pdf_derivative',
    ],
    'file' => drupal_get_path('module', 'islandora_document') . '/includes/derivatives.inc',
  ];
  $derivatives[] = [
    'source_dsid' => 'PDF',
    'destination_dsid' => 'TN',
    'weight' => '0',
    'function' => [
      'islandora_document_add_tn_derivative',
    ],
    'file' => drupal_get_path('module', 'islandora_document') . '/includes/derivatives.inc',
  ];
  $derivatives[] = [
    'source_dsid' => 'PDF',
    'destination_dsid' => 'PREVIEW',
    'weight' => '1',
    'function' => [
      'islandora_document_add_preview_derivative',
    ],
    'file' => drupal_get_path('module', 'islandora_document') . '/includes/derivatives.inc',
  ];
  if (\Drupal::config('islandora_document.settings')->get('islandora_document_create_fulltext')) {
    $derivatives[] = [
      'source_dsid' => 'PDF',
      'destination_dsid' => 'FULL_TEXT',
      'weight' => '2',
      'function' => [
        'islandora_document_add_fulltext_derivative',
      ],
      'file' => drupal_get_path('module', 'islandora_document') . '/includes/derivatives.inc',
    ];
  }
  return $derivatives;
}

/**
 * Implements hook_help().
 */
function islandora_document_help($route) {
  switch ($route) {
    // Main help page for the module.
    case 'help.page.islandora_document':
      // About section.
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t(
        'The Islandora Document module adds the ability to upload and manage documents. File types that are considered to be documents include: ODT, SXW, RTF, DOC, DOCX, WPD, TXT, HTML, ODS, SXC, XLS, XLSX, CSV, TSV, ODP, SXI, PPT, PPTX, and PDF. PDF derivatives are created for viewing Document objects.'
      ) .
      '</p>';
      // Uses section.
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dt>' . t('Upload Document Objects') . '</dt><dd>' . t(
        'In the "Manage" tab of any collection configured to accept the Islandora Document Content Model, click "Add an object to this Collection", and follow the ingest form.'
      ) .
      '</dd>';
      $output .= '<dt>' . t('View Document Objects') . '</dt><dd>' . t(
        'In the "View" tab of the collection containing the desired document, click on the thumbnail for your desired object; that will bring you to the preview in the "View" tab of the object. Clicking on the preview will allow you to view the PDF how your browser typically displays PDF files. If the Document is multiple pages, you will have to use the PDF view to scroll through the pages.'
      ) .
      '</dd>';
      $output .= '<dt>' . t('Download Document Objects') . '</dt><dd>' . t(
        'There are multiple ways to download a Document from your website:</br>1. If you just want the PDF version of your Document, then you can view the PDF and use the download functionality provided by that viewer.</br>2. If you want the original file type version of your Document, you can click the "Download document" link below the preview in the "View" tab of the Document object.</br>3. For any datastream--such as the Preview image, the Thumbnail image, the PDF, or the OBJ (the original version of the object)--you can go to the "Manage" tab of your desired object, click on the "Datastreams" section and, click "Download" next to the desired datastream.'
      ) .
      '</dd>';

      return $output;
  }
}
